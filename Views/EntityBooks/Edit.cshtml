@model dbsd_cw2_00017747.Models.EFBook

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "EntityBooks", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Book</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.id)

    <div class="form-group">
        @Html.LabelFor(model => model.title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.physical_location, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.physical_location, new List<SelectListItem>
                {
                    new SelectListItem { Text = "Main Area", Value = "Main Area", Selected = Model?.physical_location == "Main Area" },
                    new SelectListItem { Text = "Silent Area", Value = "Silent Area", Selected = Model?.physical_location == "Silent Area" }
                }, new { @class = "" })
            @Html.ValidationMessageFor(model => model.physical_location, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.is_available, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.is_available)
                @Html.ValidationMessageFor(model => model.is_available, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.isbn, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.isbn, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.isbn, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.publisher_id, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.publisher_id, Enumerable.Range(1, 10).Select(i => new SelectListItem { Value = i.ToString(), Text = i.ToString() }), new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.publisher_id, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">Current Cover Image</label>
        <div class="col-md-10">
            @if (Model.cover_image != null && Model.cover_image.Length > 0) {
                try {
                    <img src="data:image/jpeg;base64,@Convert.ToBase64String(Model.cover_image)" alt="Cover" style="max-width: 200px;" />
                } catch {
                    <span>Invalid Image</span>
                }
            } else {
                <span>No Image</span>
            }
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">Upload New Cover Image</label>
        <div class="col-md-10">
            <input type="file" name="coverImageFile" class="" />
            @Html.ValidationMessage("coverImageFile", "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.language, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.language, new List<SelectListItem>
                {
                    new SelectListItem { Text = "English", Value = "English", Selected = Model?.language == "English" },
                    new SelectListItem { Text = "Uzbek", Value = "Uzbek", Selected = Model?.language == "Uzbek" }
                }, new { @class = "" })
            @Html.ValidationMessageFor(model => model.language, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.publication_date, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.publication_date, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.publication_date, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index", "EntityBooks")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
